# -*- coding: utf-8 -*-
"""Tugas 1_ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14Z1WjCzX7mC7WDXTT5fG47Pl9Ii-nfVC

Klasifikasi kesesuaian lahan untuk tanaman padi (Tinggi, sedang, rendah)
"""

import pandas as pd
data = pd.read_csv('/content/data.csv')

data.info()

data.drop('Tahun',axis=1, inplace=True)
data.drop('Produksi',axis=1, inplace=True)
data.drop('Luas Panen',axis=1, inplace=True)

data.head(10)

def Kesesuaian_Lahan(row):
    if row['Curah hujan'] >= 1500 and row['Kelembapan'] >= 70 and row['Suhu rata-rata'] >= 25:
        return 'Tinggi'
    elif row['Curah hujan'] >= 1000 and row['Kelembapan'] >= 50 and row['Suhu rata-rata'] >= 20:
        return 'Sedang'
    elif row['Curah hujan'] < 1000 and row['Kelembapan'] < 50 and row['Suhu rata-rata'] < 20:
        return 'Rendah'

# Tambahkan kolom baru 'Kelas Kesesuaian Lahan' ke dataframe
data['Kelas Kesesuaian Lahan'] = data.apply(Kesesuaian_Lahan, axis=1)

data.to_csv("data.csv", index=False)

data.head(10)

missing_values_per_column = data.isnull().sum()
print(missing_values_per_column)

data = data.dropna()  # Untuk menghapus baris yang mengandung nilai-nilai hilang
# atau
data = data.fillna(data.mean())  # Menggantikan nilai-nilai hilang dengan rata-rata

data.head(10)

#memisahkan atribut dengan label dimana x itu atribut dan y itu label
X = data[['Curah hujan','Kelembapan','Suhu rata-rata']]
y = data['Kelas Kesesuaian Lahan']


#membagi dataset menjadi data latih dan data uji
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=0.3, random_state=123)

from sklearn.tree import DecisionTreeClassifier

#membuat model decision tree
tree_model= DecisionTreeClassifier()

#melatih model menggunakan data latih dengan fungsi fit
tree_model= tree_model.fit(X_train,y_train)

#evaluasi model untuk meguji seberapa baik model yang digunakan dan akurasi

from sklearn.metrics import accuracy_score

y_pred =  tree_model.predict(X_test)

accuracy_score =round(accuracy_score(y_pred, y_test), 3)

print('Accuracy: ',accuracy_score)

#prediksi model dengan tree model yang sdh dibuat dengan varibel (['Curah Hujan','Kelembapan','Suhu rata-rata'])

print(tree_model.predict([[6.2, 3.3, 2.0]])[0])
print(tree_model.predict([[3.2, 3.3, 2.0]])[0])
print(tree_model.predict([[6.2, 2.3, 0.2]])[0])

from sklearn.tree import DecisionTreeClassifier, export_graphviz

# Membuat model Decision Tree
tree_model = DecisionTreeClassifier()
tree_model.fit(X_train, y_train)

# Membuat visualisasi decision tree
export_graphviz(tree_model,
                out_file="data_tree.dot",
                feature_names=['Curah hujan','Kelembapan','Suhu rata-rata'],
                class_names=['Tinggi','Sedang','Rendah'],
                rounded=True,
                filled=True)